# name: Deploy to JFrog

# on:
#   push:
#     branches:
#       - main # Change this to your default branch

# jobs:
#   package_versioning:
#     name: NPM Package Bump Up
#     runs-on: ubuntu-latest
#     timeout-minutes: 1

#     permissions:
#       actions: read
#       contents: read

#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
     
#       - name: Clean Package Name
#         id: clean_package_name
#         run: |
#           git config user.name "abhishek karia"
#           git config user.email "abhishek.karia.007@gmail.com"

#           LATEST_TAG=$(git describe --tags --abbrev=0)
#           echo "Latest tag: $LATEST_TAG"
 
#           CURRENT_VERSION="${LATEST_TAG//v/}"
#           echo "Current version: $CURRENT_VERSION"

#           latest_commit_message=$(git log -1 --pretty=%B)
#           echo "$latest_commit_message"
 
#           case "$latest_commit_message" in
#             *major*)
#               echo "major Release"
#               VERSION_BUMP="major"
#              ;;
#             *minor*)
#               echo "minor Release"
#              VERSION_BUMP="minor"
#               ;;
#             *)
#               echo "patch release"
#               VERSION_BUMP="patch"
#               ;;
#           esac
         
#           echo "Version bump type: $VERSION_BUMP"
#           # echo "VERSION_BUMP=$VERSION_BUMP" >> $GITHUB_ENV

#           npm version $VERSION_BUMP -m "Bump version to %s"

#           NEW_VERSION=$(node -p -e "require('./package.json').version")
#           echo "New version: $NEW_VERSION"

#           # Extract only the version number (assuming vX.Y.Z format)
#           # VERSION_NUMBER=${env.VERSION_BUMP##*/}
#           echo "Creating tag: $NEW_VERSION"

#           git tag -a "$NEW_VERSION" -m "Bump version to $NEW_VERSION"
#           git push origin $NEW_VERSION

#       # - name: Bump version
#       #   run: |
#       #     git config user.name "abhishek karia"
#       #     git config user.email "abhishek.karia.007@gmail.com"

#       #     # Use npm version to bump the version based on the determined type
#       #     echo ${{ env.VERSION_BUMP }}
#       #     npm version ${{ env.VERSION_BUMP }} -m "Bump version to %s"

#       #     NEW_VERSION=$(node -p -e "require('./package.json').version")
#       #     echo "New version: $NEW_VERSION"

#       #     # Extract only the version number (assuming vX.Y.Z format)
#       #     # VERSION_NUMBER=${env.VERSION_BUMP##*/}
#       #     echo "Creating tag: $NEW_VERSION"

#       #     git tag -a "$NEW_VERSION" -m "Bump version to $NEW_VERSION"
#       #     git push origin $NEW_VERSION

#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: Check Latest Version
#         run: |
#           echo $(git describe --tags --abbrev=0)

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: '14' # Specify your Node.js version

#       - name: Install dependencies
#         run: npm install

#       # - name: Configure NPM for JFrog
#       #   run: |
#       #     npm config set registry ${{ secrets.JFROG_REPO }}
#       #     npm config set ${{ secrets.JFROG_URL }}:_authToken=${{ secrets.JFROG_API_KEY }}
#       #     npm publish --access public # Adjust access level if necessary

#       # - name: Publish to JFrog
#       #   env:
#       #     NODE_AUTH_TOKEN: ${{ secrets.JFROG_API_KEY }}
#       #   run: |
#       #     npm publish --access public # Adjust access level if necessary


# name: Print Latest Tag

# on:
#   push:
#     branches:
#       - main

# jobs:
#   print-latest-tag:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Print Latest Tag
#         run: |
#           git fetch --all --tags
#           echo "Latest tag: $(git describe --tags --abbrev=0)"


name: NPM Package Bump Up and Tag

on:
  push:
    branches:
      - main

jobs:
  bump-and-tag:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Bump version and tag
        run: |
          git config user.name "abhishek karia"
          git config user.email "abhishek.karia.007@gmail.com"

          npm version patch -m "Bump version to %s"
          NEW_VERSION=$(node -p -e "require('./package.json').version")
          echo "NEW_VERSION: $NEW_VERSION"
          git tag -a "$NEW_VERSION" -m "Bump version to $NEW_VERSION"
          git push origin $NEW_VERSION --follow-tags